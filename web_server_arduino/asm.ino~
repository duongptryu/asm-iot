#include <ESP8266WiFi.h>
#include <Servo.h>
#include <ESP8266WebServer.h>

ESP8266WebServer server;


Servo servo;
#define WIFI_SSID "Pika True"

#define WIFI_PASSWORD "sapa123lc"


char webpage[] PROGMEM = R"=====(
<html>
<head>
</head>
<script>
document.addEventListener("DOMContentLoaded",() => {
  document.querySelectorAll('.btn').forEach(button => {
    button.onclick = function(){
      const url = button.dataset.url;
      const request = new XMLHttpRequest();
      request.open('GET', url);
      request.onload = () => {
        alert(request.responseText);
        document.querySelector('#status').innerHTML = request.responseText;
      }
      request.send();
      }
     return false;
});
});
</script>
<body>
<button class="btn" data-url="/change-led">
Chage status led
</button>
<p>LED status:<span id = "status">ON</span> </p>
</br>
</br>
<button class = "btn" data-url="/change-vol">
Chage status volumn
</button>
<p>Volumn status:<span id = "status">ON</span> </p>
</br>
</br>
<button class = "btn" data-url="/change-servo">
Chage status led
</button>
<p>LED status:<span id = "status">OFF</span> </p>
</body>
</html>
)=====";


bool status_led;
bool status_vol;
bool status_servo;

void setup() {
  pinMode(5, INPUT);
  servo.attach(4);
  Serial.begin(115200);
  pinMode(14,OUTPUT);
  pinMode(12, OUTPUT);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi: ");
  while(WiFi.status() != WL_CONNECTED){
    Serial.print(".");
    delay(300);
    }
   Serial.println();
   Serial.print("Connected with IP: ");
   Serial.println(WiFi.localIP());
   Serial.println();

  server.on("/",[](){server.send_P(200, "text/html",webpage);});
  server.on("/change-led", getStateLed);
  server.begin();

}
 
void loop() {
    server.handleClient();
    int waterSensor = analogRead(A0);
    int sensorValue = digitalRead(5);
    if(waterSensor > 600){
      digitalWrite(12,0);
      if(sensorValue == 0){
        delay(100);
        servo.write(180);
        delay(1000);
      }
        servo.write(0);
        delay(1000);
      }else{
//        if(status_led){
            digitalWrite(12,1);
//          }
        if(sensorValue == 0){
          digitalWrite(14,1);
          delay(50);
          }
         digitalWrite(14,0);
         delay(300);
        }
}

void getStateLed(){
  changeLED();
  String led_state = digitalRead(12) ? "ON" : "OFF";
  if(led_state == "OFF"){
    status_led = false;
    }else{
      status_led = true;}
  server.send(200, "text/plain", led_state);
}

void changeLED(){
  digitalWrite(12, !digitalRead(12));
}
